version: "3"
services:
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    container_name: npm
    ports:
      - 80:80
      - 443:443
      - 81:81
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
      DISABLE_IPV6: 'true'
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt
    networks:
      - metrics
  telegraf:
    image: telegraf
    container_name: telegraf
    restart: unless-stopped
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
      INFLUX_DB: ${INFLUX_DB}
      INFLUX_USER: ${INFLUX_USER}
      INFLUX_PASSWORD: ${INFLUX_PASSWORD}
    depends_on:
      - influxdb
    networks:
      - metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  influxdb:
    image: influxdb:1.8.4
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=${INFLUX_DB}
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUX_ADMIN}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUX_ADM_PASSWORD}
      - INFLUXDB_USER=${INFLUX_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUX_PASSWORD}
    volumes:
      - influxdb_storage:/var/lib/influxdb
    networks:
      - metrics
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - influxdb
    networks:
      - metrics
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GF_USER}
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    depends_on:
      - npm
    networks:
      - metrics
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    dns:
      - 127.0.0.1
      - 1.1.1.1
    environment:
      - TZ=${TZ}
      - WEBPASSWORD=${PIHOLE_PASSWORD}
      - ADMIN_EMAIL=${PIHOLE_EMAIL}
      - DNS1=${PIHOLE_FIRST_DNS}
      - DNS2=${PIHOLE_SECOND_DNS}
      - ServerIP=${HOST_IP}
      - TEMPERATUREUNIT="c"
    volumes:
      - './pihole/pihole/:/etc/pihole/'
      - './pihole/dnsmasq/:/etc/dnsmasq.d/'
    restart: unless-stopped
  redmine:
    image: redmine
    restart: unless-stopped
    container_name: redmine
    depends_on:
      - postgres
      - npm
    networks:
      - metrics
    environment:
      - REDMINE_DB_POSTGRES=postgres
      - REDMINE_DB_DATABASE=${REDMINE_DB}
      - REDMINE_DB_USERNAME=${REDMINE_USER}
      - REDMINE_DB_PASSWORD=${REDMINE_PASSWORD}
      - REDMINE_SECRET_KEY_BASE=${REDMINE_KEY}
      - REDMINE_PLUGINS_MIGRATE=true
    volumes:
      - ./redmine/plugins:/usr/src/redmine/plugins
      - ./redmine/themes:/usr/src/redmine/public/themes
      - redmine-data:/usr/src/redmine/files
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    networks:
      - metrics
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
volumes:
  influxdb_storage:
  grafana_storage:
  postgres-data:
  redmine-data:
networks:
  metrics:
    driver: bridge
